  Future<void> sendDataWithFile(BuildContext context) async {
    try {
      FilePickerResult? result = await FilePicker.platform.pickFiles(
        type: FileType.custom,
        allowedExtensions: ['pdf', 'png', 'jpeg'],
      );

      if (result != null) {
        PlatformFile file = result.files.first;
      }
    } catch (e) {
      print('Erreur lors de la sélection du fichier : $e');
    }
  }

  /* Future<void> pickAndUploadFile(BuildContext context) async {
    final postclass = PostClass();
    try {
      FilePickerResult? result = await FilePicker.platform.pickFiles(
        type: FileType.custom, // Spécifiez le type de fichier autorisé
        allowedExtensions: ['pdf', 'png', 'jpeg'], // Extensions autorisées
      );
      if (result != null) {
        PlatformFile file = result.files.first;
        Response response =
            await postclass.postData(context, file, 'user/chat/file');
        final body = jsonDecode(response.body);
        if (response.statusCode == 200) {
          print('Fichier envoyé avec succès');
        } else {
          print('Erreur lors de l\'envoi du fichier : ${response.statusCode}');
        }
      }
    } catch (e) {
      print('Erreur lors de la sélection du fichier : $e');
    }
  }*/

 /* _messagesend(BuildContext context) async {
    var time = DateTime.now();
    var data = {
      'mailer': 'axou@test.fr',
      'receiver': 'axel2@test2.fr',
      'message': messageController.text.trim(),
      'time': time,
    };
    final postclass = PostClass();
    try {
      postclass.postData(context, data,   );
      print("nice you send something");
    } catch (e) {
      // ignore: use_build_context_synchronously
      showDialog(
        context: context,
        builder: (BuildContext context) {
          return AlertDialog(
            title: const Text('Erreur'),
            content: const Text('Une erreur s\'est produite.'),
            actions: [
              TextButton(
                child: const Text('OK'),
                onPressed: () {
                  Navigator.of(context).pop();
                },
              ),
            ],
          );
        },
      );
    }
  }*/